@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Usuario</h2>


        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })
                        @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })
                        @Html.ValidationMessageFor(model => model.IdUsuario)
                        @*hidden*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Nombre)
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return SoloLetras(event, 'lblErrorNombre')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.Nombre)
                        <label id="lblErrorNombre"></label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ApellidoPaterno)
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return SoloLetras(event, 'lblErrorApellidoPaterno')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        <label id="lblErrorApellidoPaterno"></label>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ApellidoMaterno)
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return SoloLetras(event, 'lblErrorApellidoMaterno')", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        <label id="lblErrorApellidoMaterno"></label>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-3">

                        @Html.LabelFor(model => model.Direccion)
                        @Html.DropDownListFor(model => model.Direccion.IdDireccion, new SelectList(Model.Direccion.Direcciones, "IdDireccion", "Calle"), "Selecciona una opción", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Imagen)
                        <input type="file" name="ImagenData" onchange="readURL(this);">
                        @if (Model.Imagen != null)
                        {
                            <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />
                        }
                        else
                        {
                            <img id="ImagenPreview" src="~/Content/sinproducto.jpg" style=" height:150px; width:150px;" />
                        }

                        @Html.ValidationMessageFor(model => model.Imagen)
                    </div>

                </div>

                @Html.HiddenFor(model => model.Imagen)

                <div class="form-group">
                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>

            }
        </div>
    </div>
</div>

<script>

    function SoloLetras(e, controlId) {

        var caracter = e.key;

        if (!/^[a-zA-Z]*$/g.test(caracter)) {

            $('#' + controlId).text("Solo se aceptan letras");
            $('#' + controlId).css({ "color": "red" });

            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
    }//termina validacion de letras
    </script>
    